/**
 * Copyright 2016 the WHATAP project authors. All rights reserved.
 * Use of this source code is governed by a license that
 * can be found in the LICENSE file.
 */

var fs      = require('fs'),
    path    = require('path');

function getPackageJson(){
    var appDir = require('./../conf/configure')['app.root'];
    try {
        var whatap_path = path.join(
            appDir,
            'node_modules',
            'whatap',
            'package.json');
        NodeUtil.packageJson = require(whatap_path, 'utf8');
        return;
    } catch(e) {
    }
    NodeUtil.packageJson = {};
}
function recursiveCall(fullPath, file, cb){
    if(fullPath === undefined) return;

    if(fullPath && fullPath.length < 3 ) {
        if(cb) return cb('root');
    }

    fs.access( path.join( fullPath, file) , function(err,data){
        if(err && err.code == "ENOENT"){
            return recursiveCall( path.resolve(fullPath , '..') , file, cb);
        }else if(err){
            return cb( err );
        }else{
            return cb(null, path.join( fullPath, file ) );
        }
    });
}

var NodeUtil = {
    getVersion: function(){
        return this.packageJson['version'] || 'unknown';
    },
    getName: function(){
        return this.packageJson['name'] || 'WhaTap APM';
    },
    getTimeZone: function(){
        var d = new Date();
        //var dateString = d.toString();
        var dateString = d.getTimezoneOffset();

        if(dateString < 0) dateString = "GMT+" + ((100 + Math.abs(dateString/60)) + '00').substr(1);
        else if(dateString > 0) dateString = "GMT-" + ((100 + Math.abs(dateString/60)) + '00').substr(1);
        else dateString = "GMT";
        //return /GMT[!\S]*/.exec(dateString)[0];
        return dateString;
    },
    getReleaseDate: function(){
        return this.packageJson['releaseDate'] || 'unknown';
    },
    recursiveCall: recursiveCall,
    getPackageJson : getPackageJson,
    packageJson : {}
};

module.exports = NodeUtil;